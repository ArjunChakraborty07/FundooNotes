package com.bridgelabz.fundoo.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.bridgelabz.fundoo.dto.UserDetails;
import com.bridgelabz.fundoo.response.Responce;
import com.bridgelabz.fundoo.serviceimpl.RegistrationServiceImpl;

@RestController
public class RegistrationController {
	@Autowired
	private RegistrationServiceImpl obj;
	

	@PostMapping("/registration")
	public ResponseEntity<Responce> register(@RequestBody UserDetails object) {
		String result = obj.addUser(object);
		if (result != null) {
			return ResponseEntity.status(HttpStatus.OK).body(new Responce(200, "Sucessfull!!!"));
		}
		return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(new Responce(400, "Not Sucessfull!!!"));
	}
	
	@PostMapping("/registration/login")
	public ResponseEntity<Responce> login (@RequestBody UserDetails object)
	{
		if (obj.userLogin(object))
		{
			return ResponseEntity.status(HttpStatus.OK).body(new Responce(200, "Sucessfull!!!"));
		}
	return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(new Responce(400, "Not Sucessfull!!!"));			
	}
	@PostMapping("/registration/login/forgotpassword")
	public ResponseEntity<Responce> forgotPassword(@RequestBody UserDetails object)
	{
		if(obj.forgotpwd(object))
		{
			return ResponseEntity.status(HttpStatus.OK).body(new Responce(200, "Sucessfull!!!"));
		}
		return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(new Responce(400, "Not Sucessfull!!!"));
	}
	
	@PostMapping("/registration/login/resetpassword")
	public ResponseEntity<Responce> resetPassword(@RequestBody UserDetails object)
	{
		if(obj.resetpassword(object))
		{
			return ResponseEntity.status(HttpStatus.OK).body(new Responce(200, "Sucessfull!!!"));
		}
		return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(new Responce(400, "Not Sucessfull!!!"));
	}
		
	@GetMapping("/registration/verification/{token}")
	public ResponseEntity<Responce> userVerification(@PathVariable("token") String token)
	{
		if(obj.getverify(token))
		{
			return ResponseEntity.status(HttpStatus.OK).body(new Responce(200, "Sucessfull!!!"));
		}
		return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(new Responce(400, "Not Sucessfull!!!"));
	}
	
	
	
}
